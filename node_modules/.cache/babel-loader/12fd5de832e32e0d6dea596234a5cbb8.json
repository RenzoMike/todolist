{"ast":null,"code":"var _jsxFileName = \"/Users/bujidefeng/Desktop/\\u524D\\u7AEF/react-demo/react_basic/15_Todo list/todolist/src/components/Header/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; //nanoid是一个函数，每次调用都会生成随机的字符串，字符串是全球唯一的\n\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClick = () => {\n      console.log(1);\n    };\n\n    this.handleKeyup = e => {\n      const {\n        keyCode,\n        target\n      } = e;\n      if (keyCode !== 13) return;\n\n      if (target.value.trim() === '') {\n        alert('输入不能为空');\n        return;\n      }\n\n      const newList = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      };\n      this.props.addTodo(newList);\n      target.value = '';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u786E\\u8BA4\",\n        onKeyUp: this.handleKeyup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"\\u6DFB\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bujidefeng/Desktop/前端/react-demo/react_basic/15_Todo list/todolist/src/components/Header/index.jsx"],"names":["React","Component","PropTypes","nanoid","Header","handleClick","console","log","handleKeyup","e","keyCode","target","value","trim","alert","newList","id","name","done","props","addTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,aAAP;;AACA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE5CI,WAF4C,GAE9B,MAAK;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACD,KAJ2C;;AAAA,SAQ5CC,WAR4C,GAQ7BC,CAAD,IAAM;AAClB,YAAM;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT,UAAmBF,CAAzB;AACA,UAAGC,OAAO,KAAK,EAAf,EAAmB;;AACnB,UAAGC,MAAM,CAACC,KAAP,CAAaC,IAAb,OAAwB,EAA3B,EAA+B;AAC7BC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AACD;;AACD,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAACb,MAAM,EADK;AACFc,QAAAA,IAAI,EAACN,MAAM,CAACC,KADV;AACgBM,QAAAA,IAAI,EAAC;AADrB,OAAhB;AAGA,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,OAAnB;AACAJ,MAAAA,MAAM,CAACC,KAAP,GAAe,EAAf;AACD,KApB2C;AAAA;;AAuB5CS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,4FAA/B;AAAkD,QAAA,OAAO,EAAE,KAAKb;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA9B2C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n//nanoid是一个函数，每次调用都会生成随机的字符串，字符串是全球唯一的\nimport {nanoid} from 'nanoid'\nimport './index.css'\nexport default class Header extends Component {\n\n  handleClick = ()=> {\n    console.log(1);\n  }\n\n\n  // 输入框回车键回调\n  handleKeyup = (e)=> {\n    const {keyCode,target} = e\n    if(keyCode !== 13) return\n    if(target.value.trim() === '') {\n      alert('输入不能为空')\n      return\n    }\n    const newList = {\n      id:nanoid(),name:target.value,done:false\n    }\n    this.props.addTodo(newList)\n    target.value = ''\n  }\n\n\n  render() {\n    return (\n      <div className='todo-header'>\n          <input type=\"text\" placeholder='请输入你的任务名称，按回车确认'  onKeyUp={this.handleKeyup}></input>\n          <button onClick={this.handleClick}>添加</button>\n        </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}