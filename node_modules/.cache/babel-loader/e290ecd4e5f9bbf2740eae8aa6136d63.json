{"ast":null,"code":"var _jsxFileName = \"/Users/bujidefeng/Desktop/\\u524D\\u7AEF/react-demo/react_basic/15_Todo list/todolist/src/components/Header/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; //nanoid是一个函数，每次调用都会生成随机的字符串，字符串是全球唯一的\n\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      inputValue: ''\n    };\n\n    this.handleKeyUp = event => {\n      // 结构赋值获取\n      const {\n        keyCode,\n        target\n      } = event;\n      this.setState({\n        inputValue: target.value.toString()\n      });\n      if (keyCode !== 13) return; //添加的todo不能为空\n\n      if (target.value.trim() === '') {\n        alert('输入不能为空');\n        return;\n      } // 准备好todo对象\n\n\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      }; // 将todoObj传入App组件\n\n      this.props.addTodo(todoObj); //添加完清空输入框\n\n      target.value = '';\n    };\n  }\n\n  // // 点击事件\n  // addTodos = ()=>{\n  //   console.log(this.ivalue);\n  //   // 准备好todo对象\n  //   const todoObj = {\n  //     id:nanoid(),\n  //     name:this.state.inputValue,\n  //     done:false}\n  //   // 将todoObj传入App组件\n  //   this.props.addTodo(todoObj)\n  //   //添加完清空输入框\n  //   this.setState({ inputValue: ''})\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u786E\\u8BA4\",\n        onKeyUp: this.handleKeyUp,\n        ref: c => this.ivalue = c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addTodos,\n        children: \"\\u6DFB\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/bujidefeng/Desktop/前端/react-demo/react_basic/15_Todo list/todolist/src/components/Header/index.jsx"],"names":["React","Component","PropTypes","nanoid","Header","state","inputValue","handleKeyUp","event","keyCode","target","setState","value","toString","trim","alert","todoObj","id","name","done","props","addTodo","render","c","ivalue","addTodos","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,aAAP;;AACA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAO5CI,KAP4C,GAOpC;AACNC,MAAAA,UAAU,EAAE;AADN,KAPoC;;AAAA,SAY5CC,WAZ4C,GAY7BC,KAAD,IAAW;AACvB;AACA,YAAM;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT,UAAmBF,KAAzB;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAEI,MAAM,CAACE,KAAP,CAAaC,QAAb;AAAd,OAAd;AACA,UAAIJ,OAAO,KAAK,EAAhB,EAAoB,OAJG,CAKvB;;AACA,UAAGC,MAAM,CAACE,KAAP,CAAaE,IAAb,OAAwB,EAA3B,EAA+B;AAC7BC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AACD,OATsB,CAUvB;;;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAACd,MAAM,EADK;AAEde,QAAAA,IAAI,EAACR,MAAM,CAACE,KAFE;AAGdO,QAAAA,IAAI,EAAC;AAHS,OAAhB,CAXuB,CAevB;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,OAAnB,EAhBuB,CAiBvB;;AACAN,MAAAA,MAAM,CAACE,KAAP,GAAe,EAAf;AACD,KA/B2C;AAAA;;AAiC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,4FAA/B;AAAiD,QAAA,OAAO,EAAE,KAAKf,WAA/D;AAA4E,QAAA,GAAG,EAAEgB,CAAC,IAAI,KAAKC,MAAL,GAAcD;AAApG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AArD2C;AAAzBrB,M,CAGZsB,S,GAAY;AACjBL,EAAAA,OAAO,EAAEnB,SAAS,CAACyB,IAAV,CAAeC;AADP,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n//nanoid是一个函数，每次调用都会生成随机的字符串，字符串是全球唯一的\nimport {nanoid} from 'nanoid'\nimport './index.css'\nexport default class Header extends Component {\n\n  // 对接收的props的类型进行限制\n  static propTypes = {\n    addTodo: PropTypes.func.isRequired\n  }\n\n  state = {\n    inputValue: ''\n  }\n\n  // 键盘弹起的回调\n  handleKeyUp = (event) => {\n    // 结构赋值获取\n    const {keyCode,target} = event\n    this.setState({ inputValue: target.value.toString()})\n    if (keyCode !== 13) return\n    //添加的todo不能为空\n    if(target.value.trim() === '') {\n      alert('输入不能为空')\n      return\n    }\n    // 准备好todo对象\n    const todoObj = {\n      id:nanoid(),\n      name:target.value,\n      done:false}\n    // 将todoObj传入App组件\n    this.props.addTodo(todoObj)\n    //添加完清空输入框\n    target.value = ''\n  }\n\n  // // 点击事件\n  // addTodos = ()=>{\n  //   console.log(this.ivalue);\n  //   // 准备好todo对象\n  //   const todoObj = {\n  //     id:nanoid(),\n  //     name:this.state.inputValue,\n  //     done:false}\n  //   // 将todoObj传入App组件\n  //   this.props.addTodo(todoObj)\n  //   //添加完清空输入框\n  //   this.setState({ inputValue: ''})\n  // }\n  render() {\n    return (\n      <div className='todo-header'>\n          <input type=\"text\" placeholder='请输入你的任务名称，按回车确认' onKeyUp={this.handleKeyUp} ref={c => this.ivalue = c}></input>\n          <button onClick={this.addTodos}>添加</button>\n        </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}